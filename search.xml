<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>局域网直播</title>
      <link href="/posts/74b7e8f8/"/>
      <url>/posts/74b7e8f8/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MC存档同步</title>
      <link href="/posts/66ee0351/"/>
      <url>/posts/66ee0351/</url>
      
        <content type="html"><![CDATA[<h1 id="MC存档同步"><a href="#MC存档同步" class="headerlink" title="MC存档同步"></a>MC存档同步</h1><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p>1.电脑安装，直接解压压缩包</p><p>2.手机安装apk</p><h2 id="设备绑定"><a href="#设备绑定" class="headerlink" title="设备绑定"></a>设备绑定</h2><p>1.显示ID</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/image-20230320152520532.68ug384bg9w0.webp" alt="image-20230320152520532"></p><p>2.使用手机软件扫或者复制代码</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202303261824974.png" alt="image-20230320152551917"></p><p>3.完成</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202303261827469.png" alt="image-20230320152611806"></p><h2 id="添加存档文件夹"><a href="#添加存档文件夹" class="headerlink" title="添加存档文件夹"></a>添加存档文件夹</h2><p>1.<img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202303261830176.png" alt="image-20230320152644413"></p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202303261832255.png" alt="image-20230320152832445"></p><p>存档位置在下面找</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\用户名\AppData\Local\Packages\Microsoft.MinecraftUWP_8wekyb3d8bbwe\LocalState\games\com.mojang\minecraftWorlds</span><br></pre></td></tr></table></figure><p>2.打开共享</p><p>要不要设密码自己决定</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202303261835895.png" alt="image-20230320152944667"></p><p>3.设置版本控制</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202303261835256.png" alt="image-20230320153026911"></p><p>4.确定</p><h2 id="手机操作"><a href="#手机操作" class="headerlink" title="手机操作"></a>手机操作</h2><p>打开软件，然后打开通知，点同意</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202303261838640.jpg" alt="Screenshot_20230320_153101_com.nutomic.syncthinga"></p><p>2.设置手机存档路径</p><p><strong>记得把存档路径下面的电脑勾上</strong></p><p>也可以加个版本控制</p><p>存档路径不一定是这个，根目录下还有一个</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202303261840731.jpg" alt="Screenshot_20230320_153201_com.nutomic.syncthinga"></p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202303261840212.jpg" alt="Screenshot_20230320_153207_com.nutomic.syncthinga"></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>同步时需要将手机和电脑一起打开，不用多于操作，自动同步</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202303261840393.png" alt="image-20230320153553243"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> minecraft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ChatGPT部署到QQ机器人上</title>
      <link href="/posts/6fb65219/"/>
      <url>/posts/6fb65219/</url>
      
        <content type="html"><![CDATA[<p>openai的聊天机器人最近大火，上手试了试，和过去相比进步太多了</p><span id="more"></span><h1 id="已失效"><a href="#已失效" class="headerlink" title="已失效"></a>已失效</h1><h2 id="目前解决方案"><a href="#目前解决方案" class="headerlink" title="目前解决方案"></a>目前解决方案</h2><p><a href="https://github.com/acheong08/ChatGPT/wiki/Setup">Setup · acheong08&#x2F;ChatGPT Wiki (github.com)</a></p><p><a href="https://blog.chrisyy.top/qq-chatGPT.html">5分钟在QQ群搭建ChatGPT机器人！ - Chris’s blog (chrisyy.top)</a></p><p>下面的操作可以在自己的虚拟机里弄，也可以在云服务器里弄</p><p>[<a href="https://lucent.blog/?p=99">ChatGPT] 使用Python对接OpenAi APi 实现智能QQ机器人(三) - 搭建QQ机器人 - Lucent’s Blog</a></p><h2 id="跟进"><a href="#跟进" class="headerlink" title="跟进"></a>跟进</h2><p><a href="https://github.com/A-kirami/nonebot-plugin-chatgpt/issues/44">Tag “<head>“ does not correspond to any known ansi directive</a></p><h1 id="更新到python3-9"><a href="#更新到python3-9" class="headerlink" title="更新到python3.9"></a>更新到python3.9</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 我也使用的wget ,我下载到了home中</span><br><span class="line">wget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz</span><br><span class="line"># 在home中解压</span><br><span class="line">tar -zxf Python-3.9.0.tgz</span><br><span class="line"># 进入python3.9</span><br><span class="line">cd Python-3.9.0</span><br><span class="line">#安装依赖</span><br><span class="line">sudo apt-get install libffi-dev</span><br><span class="line">sudo apt-get install openssl</span><br><span class="line"></span><br><span class="line"># 编译文件  时间大概有1-3分钟</span><br><span class="line">./configure --prefix=/usr/local/python3</span><br><span class="line"></span><br><span class="line"># 编译好后，会有另外一个提示，让run ./configure xxx</span><br><span class="line">./configure --enable-optimizations</span><br><span class="line"></span><br><span class="line"># 安装</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"># 检查python3版本</span><br><span class="line">python3 -V</span><br></pre></td></tr></table></figure><h1 id="配置cqhttp"><a href="#配置cqhttp" class="headerlink" title="配置cqhttp"></a>配置cqhttp</h1><h2 id="放在一个文件夹里"><a href="#放在一个文件夹里" class="headerlink" title="放在一个文件夹里"></a>放在一个文件夹里</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -S gocq  #打开新窗口</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x 文件名  #给下执行权限</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./软件名</span><br></pre></td></tr></table></figure><ol><li>修改qq账号</li><li>修改<code>ws-reverse</code>中<code>universal</code>为<code> ws://127.0.0.1:8080/onebot/v11/ws</code>最后servers部分的配置</li><li>然后再次运行.&#x2F;go-cqhttp，完成登录后按Ctrl+A+D放到后台运行</li></ol><h1 id="框架设置"><a href="#框架设置" class="headerlink" title="框架设置"></a>框架设置</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.pip</span><br><span class="line"></span><br><span class="line">vi ~/.pip/pip.conf</span><br><span class="line"></span><br><span class="line">复制如下内容（阿里镜像源为例）：</span><br><span class="line">[global]</span><br><span class="line">index-url = http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">[install]</span><br><span class="line">trusted-host = mirrors.aliyun.com</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">screen -S robot</span><br><span class="line">python3 --version 查看版本</span><br><span class="line">python3 -m venv venv</span><br><span class="line">source venv/bin/activate</span><br><span class="line">pip3 install nb-cli</span><br><span class="line">pip3 install nonebot-adapter-onebot # 安装适配器</span><br><span class="line">nb # 生成bot文件</span><br></pre></td></tr></table></figure><p><img src="https://chrisyy-images.oss-cn-chengdu.aliyuncs.com/img/image-20221209140937584.png"></p><blockquote><p>按空格选择</p></blockquote><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb run #启动bot</span><br></pre></td></tr></table></figure><p>要与机器人互动，可以首先使用<code>/echo</code>命令让其输出一些信息，斜杠<code>/</code>是nonebot默认的命令起始符号，可以自定义设置。</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb plugin install nonebot-plugin-chatgpt #安装插件</span><br></pre></td></tr></table></figure><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>bot.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.onebot.v11 <span class="keyword">import</span> Adapter <span class="keyword">as</span> ONEBOT_V11Adapter <span class="comment">#这一句可能没有</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Custom your logger</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># from nonebot.log import logger, default_format</span></span><br><span class="line"><span class="comment"># logger.add(&quot;error.log&quot;,</span></span><br><span class="line"><span class="comment">#            rotation=&quot;00:00&quot;,</span></span><br><span class="line"><span class="comment">#            diagnose=False,</span></span><br><span class="line"><span class="comment">#            level=&quot;ERROR&quot;,</span></span><br><span class="line"><span class="comment">#            format=default_format)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can pass some keyword args config to init function</span></span><br><span class="line">nonebot.init()</span><br><span class="line">app = nonebot.get_asgi()</span><br><span class="line"></span><br><span class="line">driver = nonebot.get_driver()</span><br><span class="line">driver.register_adapter(ONEBOT_V11Adapter) <span class="comment">#这一句可能没有</span></span><br><span class="line"></span><br><span class="line">nonebot.load_builtin_plugins(<span class="string">&quot;echo&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Please DO NOT modify this file unless you know what you are doing!</span></span><br><span class="line"><span class="comment"># As an alternative, you should use command `nb` or modify `pyproject.toml` to load plugins</span></span><br><span class="line">nonebot.load_from_toml(<span class="string">&quot;pyproject.toml&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Modify some config / config depends on loaded configs</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># config = driver.config</span></span><br><span class="line"><span class="comment"># do something...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    nonebot.logger.warning(<span class="string">&quot;Always use `nb run` to start the bot instead of manually running!&quot;</span>)</span><br><span class="line">    nonebot.run(app=<span class="string">&quot;__mp_main__:app&quot;</span>)</span><br></pre></td></tr></table></figure><p>pyproject.toml</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[tool.poetry]</span><br><span class="line">name = <span class="string">&quot;bot&quot;</span></span><br><span class="line">version = <span class="string">&quot;0.1.0&quot;</span></span><br><span class="line">description = <span class="string">&quot;bot&quot;</span></span><br><span class="line">authors = []</span><br><span class="line">readme = <span class="string">&quot;README.md&quot;</span></span><br><span class="line"></span><br><span class="line">[tool.poetry.dependencies]</span><br><span class="line">python = <span class="string">&quot;^3.7.3&quot;</span></span><br><span class="line">nonebot2 = <span class="string">&quot;^2.0.0-beta.1&quot;</span></span><br><span class="line"></span><br><span class="line">[tool.poetry.dev-dependencies]</span><br><span class="line">nb-cli = <span class="string">&quot;^0.6.0&quot;</span></span><br><span class="line"></span><br><span class="line">[tool.nonebot]</span><br><span class="line">plugins = [<span class="string">&quot;nonebot_plugin_chatgpt&quot;</span>]  <span class="comment">#这里添加插件名字</span></span><br><span class="line">plugin_dirs = [<span class="string">&quot;bot/plugins&quot;</span>]</span><br><span class="line"></span><br><span class="line">[build-system]</span><br><span class="line">requires = [<span class="string">&quot;poetry_core&gt;=1.0.0&quot;</span>]</span><br><span class="line">build-backend = <span class="string">&quot;poetry.core.masonry.api&quot;</span></span><br></pre></td></tr></table></figure><p>.env.dev</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">HOST=127.0.0.1</span><br><span class="line">PORT=8080</span><br><span class="line">LOG_LEVEL=DEBUG</span><br><span class="line">FASTAPI_RELOAD=true</span><br><span class="line"></span><br><span class="line">command_start=[&quot;&quot;]</span><br><span class="line"></span><br><span class="line">CHATGPT_SESSION_TOKEN=&quot;xxx&quot; # token信息</span><br><span class="line">CHATGPT_COMMAND=&quot;。&quot;# 触发聊天的命令</span><br><span class="line">CHATGPT_TO_ME=&quot;False&quot;# 是否需要@机器人</span><br><span class="line"></span><br><span class="line">CHATGPT_CD_TIME=&quot;5&quot;</span><br></pre></td></tr></table></figure><h2 id="token获取"><a href="#token获取" class="headerlink" title="token获取"></a>token获取</h2><p>打开<a href="https://chat.openai.com/chat">https://chat.openai.com/chat</a></p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212111902989.png" alt="image-20221211190204796" style="zoom:50%;" /><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">screen -S qqrobot</span><br><span class="line">source venv/bin/activate</span><br><span class="line">nb run</span><br></pre></td></tr></table></figure><p>完成后按Ctrl+A+D放到后台运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -r qqrobot  #打开qqrobot中断窗口</span><br></pre></td></tr></table></figure><h1 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h1><h2 id="参考网站"><a href="#参考网站" class="headerlink" title="参考网站"></a>参考网站</h2><p><a href="https://chat.openai.com/chat">ChatGPT (openai.com)</a></p><p><a href="https://blog.chrisyy.top/qq-chatGPT.html">5分钟在QQ群搭建ChatGPT机器人！ - Chris’s blog (chrisyy.top)</a></p><h2 id="运行框架"><a href="#运行框架" class="headerlink" title="运行框架"></a>运行框架</h2><p><a href="https://github.com/nonebot/awesome-nonebot">nonebot&#x2F;awesome-nonebot: NoneBot 相关资源汇总 (github.com)</a></p><p><a href="https://onebot.adapters.nonebot.dev/docs/guide/installation/">安装 | NoneBot</a></p><p><a href="https://github.com/chrisyy2003/lingyin-bot">chrisyy2003&#x2F;lingyin-bot (github.com)</a></p><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p><a href="https://github.com/A-kirami/nonebot-plugin-chatgpt">A-kirami&#x2F;nonebot-plugin-chatgpt (github.com)</a></p><p><a href="https://github.com/FokersBoolean/AliceBot">FokersBoolean&#x2F;AliceBot (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ChatGPT </tag>
            
            <tag> QQ机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github图床+Picgo+typroa+CDN加速</title>
      <link href="/posts/f2c18243/"/>
      <url>/posts/f2c18243/</url>
      
        <content type="html"><![CDATA[<p>使用Github作为图床，通过jsDelivr的CDN 加速服务，使国内也能访问<br>其中还有picgo和typroa的配置</p><span id="more"></span><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Molunerfinn/PicGo   Picgo下载</span><br></pre></td></tr></table></figure><h1 id="Token准备"><a href="#Token准备" class="headerlink" title="Token准备"></a>Token准备</h1><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>1.进入设置</p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022308095.png" alt="image-20221202230820045" style="zoom:50%;" /><p>2.滑到最下面，进入Developer settings</p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022308743.png" alt="image-20221202230858713"  /><p>3.电机Generate new token 选择classic</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022309714.png" alt="image-20221202230926674"></p><p>4.修改三个地方</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022312192.png"></p><p>5.保存好生成的token，因为只会显示一次</p><h1 id="图床准备"><a href="#图床准备" class="headerlink" title="图床准备"></a>图床准备</h1><h2 id="建立库"><a href="#建立库" class="headerlink" title="建立库"></a>建立库</h2><p>要求：公开，项目名字没有奇奇怪怪的符号</p><h2 id="设置Picgo"><a href="#设置Picgo" class="headerlink" title="设置Picgo"></a>设置Picgo</h2><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022315388.png" alt="image-20221202231504353"></p><p><strong>注意：</strong></p><p>1.分支名字2022建立的库，名字默认为main，之前使master，这个看库里面怎么显示就怎么填</p><p>2.储存路径不填则图片上传至主目录下，自定义域名那里也要跟着设置，这是CDN加速的关键</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022316556.png" alt="image-20221202231625523"></p><h1 id="备选上传方案"><a href="#备选上传方案" class="headerlink" title="备选上传方案"></a>备选上传方案</h1><p><a href="https://picx.xpoet.cn/#/management">图床管理 | PicX 图床神器 (xpoet.cn)</a></p><p>可以直接在网上操作上传图片到图传，好处是删除图片的时候，库里面会跟着一起删除。</p><h1 id="Typroa设置"><a href="#Typroa设置" class="headerlink" title="Typroa设置"></a>Typroa设置</h1><p>这部分按需设置</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022322207.png" alt="image-20221202232244169"></p><h1 id="图片上传失败原因"><a href="#图片上传失败原因" class="headerlink" title="图片上传失败原因"></a>图片上传失败原因</h1><p><strong>强烈推荐把所有内容清空，然后手打上去，key除外</strong></p><p>0.修改host！！！！！！！！！！！！</p><p>1.Picgo没有设置好</p><p>2.Picgo-Server端口不是36677，端口可以在验证图片上传选项里看见</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022321834.png" alt="image-20221202232135798"></p><p>3.可以把Picgo-Server关掉再打开</p><p>4.已经存在同名文件</p><p>可以把Picgo的<code>时间戳重命名打开</code></p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022325052.png" alt="image-20221202232528020"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jsDelivr </tag>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PlanckPi(LicheePi)使用虚拟机成功联网后过一会自动断开解决</title>
      <link href="/posts/505131a/"/>
      <url>/posts/505131a/</url>
      
        <content type="html"><![CDATA[<h1 id="情况还原"><a href="#情况还原" class="headerlink" title="情况还原"></a>情况还原</h1><p>按照Plank_Pi（LicheePI）联网教程后(<a href="https://blog.csdn.net/qq_41253675/article/details/124898690">稚晖君planck_Pi游玩笔记_LyCraft98的博客-CSDN博客</a>)，可以短暂的让板子连上网络，但是过一会就会断开，将设备断开然后再连接上，就又能够ssh到板子并且可以联网</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022255430.png" alt="QQ图片20221112151610"></p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><h2 id="短暂解决（重启后就失效）"><a href="#短暂解决（重启后就失效）" class="headerlink" title="短暂解决（重启后就失效）"></a>短暂解决（重启后就失效）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/network-manager stop</span><br></pre></td></tr></table></figure><h2 id="长久解决"><a href="#长久解决" class="headerlink" title="长久解决"></a>长久解决</h2><h3 id="现在虚拟机内输入指令"><a href="#现在虚拟机内输入指令" class="headerlink" title="现在虚拟机内输入指令"></a>现在虚拟机内输入指令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022256667.png" alt="image-20221112152747623"></p><p>记住inet后面的值</p><h3 id="禁用VM虚拟机的DHCP分配"><a href="#禁用VM虚拟机的DHCP分配" class="headerlink" title="禁用VM虚拟机的DHCP分配"></a>禁用VM虚拟机的DHCP分配</h3><p>工具栏那边：编辑-&gt;虚拟网络编辑器，关闭箭头的那项，记得记住此时IP</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022255153.png" alt="image-20221112152630936"></p><h3 id="设置当前系统的网卡"><a href="#设置当前系统的网卡" class="headerlink" title="设置当前系统的网卡"></a>设置当前系统的网卡</h3><p>虚拟机上右键-&gt;设置,将网卡换到NAT那个</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022256449.png" alt="image-20221112153018851"></p><h3 id="设置系统固定IP"><a href="#设置系统固定IP" class="headerlink" title="设置系统固定IP"></a>设置系统固定IP</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/netplan</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p>找到这个***.yaml文件</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022256536.png" alt="image-20221112153131266"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vim ****.yaml</span><br><span class="line">没有vim的话 先执行sudo apt install vim</span><br></pre></td></tr></table></figure><p>添加或修改内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">     ethernets:</span><br><span class="line">         ens33:</span><br><span class="line">             addresses:</span><br><span class="line">             - 192.168.230.128/24</span><br><span class="line">             dhcp4: false</span><br><span class="line">             gateway4: 192.168.230.2</span><br><span class="line">             nameservers:</span><br><span class="line">                 addresses:</span><br><span class="line">                 - 8.8.8.8</span><br><span class="line">                 search: []</span><br><span class="line">     version: 2</span><br></pre></td></tr></table></figure><p><strong>ens33</strong>就是虚拟机对外通讯使用的端口，这里的配置也就是给这个端口配置IP地址等信息：</p><p><strong>addressers</strong>：本机IP地址和掩码，刚刚开头让你记住的那个IP</p><p><strong>dhcp4</strong>：false &#x2F;&#x2F;关闭DHCP</p><p><strong>gateway4</strong>：192.168.230.2 &#x2F;&#x2F;从下面的位置查看</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022256189.png" alt="image-20221112153533439"></p><p>下面的<strong>nameservers</strong>中配置了8.8.8.8的IP地址，这里是为了让虚拟机能够访问DNS服务器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo netplan apply  //应用设置</span><br></pre></td></tr></table></figure><p>可以测试一下<code>ping www.baidu.com</code>,虚拟机可以访问外部网络</p><p>然后连上plankPi就不会被断开了！</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://www.cnblogs.com/leaven/archive/2010/12/22/1913995.html">ubuntu usb0 网卡自动配置 - 海王 - 博客园 (cnblogs.com)</a></p><p><a href="https://blog.csdn.net/weixin_30877755/article/details/99663513?spm=1001.2101.3001.6650.5&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-5-99663513-blog-85088371.pc_relevant_3mothn_strategy_recovery&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-5-99663513-blog-85088371.pc_relevant_3mothn_strategy_recovery&utm_relevant_index=6">【Linux】虚拟机中，如何把虚拟机的IP地址固定，而不是DHCP自动分配。（Linux系统为ubuntu 18.4）…_weixin_30877755的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_41253675/article/details/124898690"> 稚晖君planck_Pi游玩笔记_LyCraft98的博客-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QT缺少python27.dll修复办法</title>
      <link href="/posts/7271e5d8/"/>
      <url>/posts/7271e5d8/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022257204.png" alt="image-20220410121933509"></p><p>点开QT时出现上述问题，一种方法就是找python27.dll文件进行替换。</p><p>1.进入网站下载相关文件  <a href="https://windll.com/dll/python-software-foundation/python27">https://windll.com/dll/python-software-foundation/python27</a></p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022257917.png" alt="image-20220410122232691"></p><p>2.之后将文件移动到下面的路径里，C:\Windows\SysWOW64\</p><p>3.<em>然后重启</em>软件或电脑</p><p>试了4种方案，把32位放在System32和SysWOW64，只有放在sysWOW64可以解决问题，同样64位放在System32和SysWOW64都不能解决问题</p><p>不想在网站找，可以链接直接下载：</p><p><a href="https://download.csdn.net/download/qq_31721897/85104258">https://download.csdn.net/download/qq_31721897/85104258</a></p><blockquote><p><a href="https://windll.com/">https://windll.com/</a> 这个网站可以找到其他的dll，如果你有其他dll缺失，里面应该都能找到</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsDelivr使用，免费提供CDN加速服务</title>
      <link href="/posts/de076821/"/>
      <url>/posts/de076821/</url>
      
        <content type="html"><![CDATA[<blockquote><p>用jsdelivr建立CDN有两种方式，一种是npm，一种是GitHub</p><p>推荐使用npm，下载更快些。</p></blockquote><p><strong>使用npm需要安装nodejs</strong></p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><blockquote><p>进入npm官网  <a href="https://www.npmjs.com/">https://www.npmjs.com/</a>  注册账号</p></blockquote><h1 id="登录npm"><a href="#登录npm" class="headerlink" title="登录npm"></a>登录npm</h1><blockquote><p>打开<code>CMD（管理员模式）</code>或者<code>Git</code>输入</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm login</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212031243922.png" alt="20210712232610"></p><blockquote><p>创建一个文件夹放自己要打包上传的东西,文件夹名字与下面package.json里的name一样</p></blockquote><h1 id="初始化包"><a href="#初始化包" class="headerlink" title="初始化包"></a>初始化包</h1><p>用CMD或Git输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> F:\GithubProjects\<span class="built_in">test</span>   <span class="comment">#我的是放在这边</span></span><br><span class="line">npm init</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212031244017.png" alt="20210712232610"></p><blockquote><p>一路回车后进入打包文件夹里的package.json</p><p>修改name这一项，不能和现有的重名,可以用你自己设置的名字在npm官网搜索一下</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;testttt0001&quot;</span><span class="punctuation">,</span>   #包名</span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span>#版本</span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span>#描述</span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span>#作者</span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p> 文件夹里新建两个文件,index.js 和 README.md，不一定要</p><p>index.js文件就是你要导出的内容</p><p>README.md就是一个包的介绍</p></blockquote><h1 id="发布包"><a href="#发布包" class="headerlink" title="发布包"></a>发布包</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish testttt0001</span><br></pre></td></tr></table></figure><p><strong>每次发布都要更改package.json里的version</strong></p><h1 id="下载包"><a href="#下载包" class="headerlink" title="下载包"></a>下载包</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm insatll testtttt0001</span><br></pre></td></tr></table></figure><h1 id="以下是官方介绍"><a href="#以下是官方介绍" class="headerlink" title="以下是官方介绍"></a>以下是官方介绍</h1><h2 id="npm-CDN"><a href="#npm-CDN" class="headerlink" title="npm CDN"></a>npm CDN</h2><p>加载npm上托管的任何项目</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/npm/package@version/file</span></span><br></pre></td></tr></table></figure><p>加载文件的确切版本</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/npm/jquery@3.2.1/dist/jquery.min.js</span></span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json</span></span><br></pre></td></tr></table></figure><p>使用版本范围而不是确切版本</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/npm/jquery@3/dist/jquery.min.js</span></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/npm/jquery@3.1/dist/jquery.min.js</span></span><br></pre></td></tr></table></figure><p>如果您使用此功能，并且您所请求的文件在最新版本的软件包中不可用，则由于jsdelivr的版本回退功能，该链接将继续工作。jsdelivr将继续从旧版本的软件包中提供该文件，而不是因为404错误而失败。<br>按标签加载（不建议用于生产用途）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/npm/jquery@beta/dist/jquery.min.js</span></span><br></pre></td></tr></table></figure><p>完全省略版本或使用“latest”加载最新版本（不推荐用于生产用途）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js</span></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js</span></span><br></pre></td></tr></table></figure><p>请求最新版本</p><p>（而不是“最新专业版”或“最新版本”）是危险的，因为主要版本通常会带来重大变化。只有你真的知道自己在做什么才这样做。</p><p>将“.min”添加到任何JS &#x2F; CSS文件以获得缩小版本 – 如果不存在，jsdelivr将为您生成它。所有生成的文件都带有源映射，可以在开发过程中轻松使用：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/npm/github-markdown-css@2.4.1/github-markdown.min.css</span></span><br></pre></td></tr></table></figure><p>缩小大文件可能需要几秒钟。但是，jsdelivr将所有生成的文件存储在永久存储中，因此此延迟仅适用于前几个请求。<br>省略文件路径以获取默认文件（目前不推荐）。此文件始终缩小：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/npm/jquery@3.2.1</span></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/npm/jquery@3</span></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/npm/jquery</span></span><br></pre></td></tr></table></figure><p>如果默认文件不直接位于程序包的根目录中，则使用此功能可能会导致相对导入出现问题，例如源映射，图像或请求的文件引用的字体文件。<br>获取目录列表</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/npm/jquery@3.2.1/</span></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/npm/jquery@3.2.1/dist/</span></span><br></pre></td></tr></table></figure><h2 id="GitHub-CDN"><a href="#GitHub-CDN" class="headerlink" title="GitHub CDN"></a>GitHub CDN</h2><p>建议将npm用于支持更好用户体验的项目 – 在jsdelivr网站上可以搜索npm包，并且包页面显示其他有用信息，例如描述和主页链接。<br>jsdelivr使用永久S3存储来确保所有文件仍然可用，即使GitHub发生故障，或者作者删除了存储库或版本。仅在第一次直接从GitHub获取文件，或者当S3关闭时。<br>加载任何GitHub版本，提交或分支：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/gh/user/repo@version/file</span></span><br></pre></td></tr></table></figure><p>加载文件的确切版本</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js</span></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/gh/jquery/jquery@32b00373b3f42e5cdcb709df53f3b08b7184a944/dist/jquery.min.js</span></span><br></pre></td></tr></table></figure><p>使用版本范围而不是确切版本</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/gh/jquery/jquery@3.2/dist/jquery.min.js</span></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/gh/jquery/jquery@3/dist/jquery.min.js</span></span><br></pre></td></tr></table></figure><p>如果您使用此功能，并且最新版本中未提供您请求的文件，则由于jsdelivr的版本回退功能，该链接将继续有效。jsdelivr将继续从旧版本提供该文件，而不是因为404错误而失败。<br>完全省略版本或使用“latest”加载最新版本（不推荐用于生产用途）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/gh/jquery/jquery@latest/dist/jquery.min.js</span></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/gh/jquery/jquery/dist/jquery.min.js</span></span><br></pre></td></tr></table></figure><p>请求最新版本（而不是“最新专业版”或“最新版本”）是危险的，因为主要版本通常会带来重大变化。只有你真的知道自己在做什么才这样做。<br>将“.min”添加到任何JS &#x2F; CSS文件以获得缩小版本 – 如果不存在，我们将为您生成它。所有生成的文件都带有源映射，可以在开发过程中轻松使用：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/src/core.min.js</span></span><br></pre></td></tr></table></figure><p>缩小大文件可能需要几秒钟。但是，jsdelivr将所有生成的文件存储在永久存储中，因此此延迟仅适用于前几个请求。<br>获取目录列表</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/</span></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/</span></span><br></pre></td></tr></table></figure><p>合并多个文件</p><p>jsdelivr的组合端点允许您在一个请求中从npm和GitHub端点加载多个文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/combine/url1,url2,url3</span></span><br></pre></td></tr></table></figure><p>适用于单个文件的所有功能（版本范围，缩小等）也适用于此处。所有组合文件都带有源映射，可以在开发过程中轻松使用。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/combine/gh/jquery/jquery@3.2/dist/jquery.min.js,gh/twbs/bootstrap@3.3/dist/js/bootstrap.min.js</span></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/combine/npm/bootstrap@3.3/dist/css/bootstrap.min.css,npm/bootstrap@3.3/dist/css/bootstrap-theme.min.css</span></span><br></pre></td></tr></table></figure><p>组合大&#x2F;多个文件可能需要几秒钟。但是，jsdelivr将所有生成的文件存储在永久存储中，因此此延迟仅适用于前几个请求。</p><h2 id="WordPress-CDN"><a href="#WordPress-CDN" class="headerlink" title="WordPress CDN"></a>WordPress CDN</h2><p>从WordPress.org插件SVN repo加载任何插件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/wp/plugins/project/tags/version/file</span></span><br></pre></td></tr></table></figure><p>加载文件的确切版本</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/wp/plugins/wp-slimstat/tags/4.6.5/wp-slimstat.js</span></span><br></pre></td></tr></table></figure><p>加载最新版本（不建议用于生产用途）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/wp/plugins/wp-slimstat/trunk/wp-slimstat.js</span></span><br></pre></td></tr></table></figure><p>请求最新版本是危险的，因为新版本可能会带来重大变化。只有你真的知道自己在做什么才这样做。<br>从WordPress.org主题SVN repo加载任何主题</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/wp/themes/project/version/file</span></span><br></pre></td></tr></table></figure><p>加载文件的确切版本</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//cdn.jsdelivr.net/wp/themes/twenty-eightteen/1.7/assets/js/html5.js</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jsDelivr </tag>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美化你的博客文章</title>
      <link href="/posts/32e64cde/"/>
      <url>/posts/32e64cde/</url>
      
        <content type="html"><![CDATA[<h1 id="文章样式"><a href="#文章样式" class="headerlink" title="文章样式"></a>文章样式</h1><h2 id="多彩引用标签"><a href="#多彩引用标签" class="headerlink" title="多彩引用标签"></a>多彩引用标签</h2><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022254077.png" alt="20210527232523"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&gt; Primary</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;success&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&gt; Success</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;warning&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&gt; Warning</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;danger&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&gt; Danger</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&gt; Info</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Primary</p></blockquote><div class="success"><blockquote><p>Success</p></blockquote></div><div class="warning"><blockquote><p>Warning</p></blockquote></div><div class="danger"><blockquote><p>Danger</p></blockquote></div><div class="info"><blockquote><p>Info</p></blockquote></div><h2 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h2><details>  <summary>这是折叠案例</summary>  这是内容</details><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;details&gt;</span><br><span class="line">  &lt;summary&gt;Summary&lt;/summary&gt;</span><br><span class="line">  Content</span><br><span class="line">&lt;/details&gt;</span><br></pre></td></tr></table></figure><h2 id="加深背景"><a href="#加深背景" class="headerlink" title="加深背景"></a>加深背景</h2><p><code>type</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`type`</span><br></pre></td></tr></table></figure><h2 id="修改设置效果生成"><a href="#修改设置效果生成" class="headerlink" title="修改设置效果生成"></a>修改设置效果生成</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/yun</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h2 id="文章内跳转"><a href="#文章内跳转" class="headerlink" title="文章内跳转"></a>文章内跳转</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;jump2&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#00ffff</span>&gt;</span>2即标题1<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;test1&quot;</span>&gt;</span>2级标题1正文<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">[点击跳转到](#test2)</span><br><span class="line">[点击跳转到底部](#jump)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;tset2&quot;</span>&gt;</span>4级标题2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;jump&quot;</span>&gt;</span>4级标题2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">[点击跳转到2级标题1正文](#test1)</span><br><span class="line">[跳转到2级标题1](#jump2)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="卡片样式"><a href="#卡片样式" class="headerlink" title="卡片样式"></a>卡片样式</h1><h3 id="内容卡片"><a href="#内容卡片" class="headerlink" title="内容卡片"></a>内容卡片</h3><ul><li><code>opacity</code>: 自定义展示的文章卡片透明度，默认为 <code>0.8</code></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_card:</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.8</span></span><br></pre></td></tr></table></figure><h4 id="type"><a href="#type" class="headerlink" title="# type"></a><a href="https://yun.yunyoujun.cn/guide/config.html#type">#</a> type</h4><p>为文章设置 <code>type</code> 属性，即可将其转为其他类型卡片，并跳转 <code>url</code> 设置的链接。</p><p>譬如：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: xxx</span><br><span class="line">type: bilibili</span><br><span class="line"><span class="section">url: https://www.bilibili.com/video/av8153395/</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>在文章标题前将会出现 bilibili 的图标，点击标题会跳转至对应的链接。</p><p>目前默认支持以下类型（哔哩哔哩、豆瓣、GitHub、网易云音乐、推特、微信公众号、微博、语雀、知乎、Notion、外链）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">types:</span></span><br><span class="line">  <span class="attr">link:</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">blue</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">icon-external-link-line</span></span><br><span class="line">  <span class="attr">bilibili:</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">&quot;#FF8EB3&quot;</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">icon-bilibili-line</span></span><br><span class="line">  <span class="attr">douban:</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">&quot;#007722&quot;</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">icon-douban-line</span></span><br><span class="line">  <span class="attr">github:</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">black</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">icon-github-line</span></span><br><span class="line">  <span class="attr">netease-cloud-music:</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">&quot;#C10D0C&quot;</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">icon-netease-cloud-music-line</span></span><br><span class="line">  <span class="attr">notion:</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">black</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">icon-notion</span></span><br><span class="line">  <span class="attr">twitter:</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">&quot;#1da1f2&quot;</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">icon-twitter-line</span></span><br><span class="line">  <span class="attr">wechat:</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">&quot;#1AAD19&quot;</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">icon-wechat-2-line</span></span><br><span class="line">  <span class="attr">weibo:</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">&quot;#E6162D&quot;</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">icon-weibo-line</span></span><br><span class="line">  <span class="attr">yuque:</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">&quot;#25b864&quot;</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">icon-yuque</span></span><br><span class="line">  <span class="attr">zhihu:</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">&quot;#0084FF&quot;</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">icon-zhihu-line</span></span><br></pre></td></tr></table></figure><p>你也可以自己在 <code>yun.yml</code> 设置你跳转不同链接专属的图标和颜色。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">type:</span></span><br><span class="line">  <span class="attr">google:</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">xxx</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">xxx</span></span><br></pre></td></tr></table></figure><p>当你指定的 <code>type</code> 不存在于默认支持中，也没有进行自定义，将默认使用蓝色的额外链接图标。</p><p>如果你想在你的外链卡片上显示一些信息，你可以写在 <code>&lt;!-- more --&gt;</code> 前，它会被当作摘要显示。</p><p>譬如：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo-theme-yun</span><br><span class="line">type: github</span><br><span class="line"><span class="section">url: https://github.com/YunYouJun/hexo-theme-yun</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line">Hexo 主题 Yun</span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure><h4 id="hide"><a href="#hide" class="headerlink" title="# hide"></a><a href="https://yun.yunyoujun.cn/guide/config.html#hide">#</a> hide</h4><p>你可以在文章头部添加 <code>hide</code> 属性，来临时隐藏某篇文章。</p><ul><li><pre><code>hide<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  :</span><br><span class="line"></span><br><span class="line">  - `index`: 设置为 `index` 时，将只在首页隐藏，归档中仍然展示。（譬如放一些没有必要放在首页的笔记，并在归档中方便自己查看。）</span><br><span class="line">  - `true`: 当设置为 `true` 时，该文章仍然会被渲染，你自己可以直接访问链接进行查看。但不会被显示在展示的文章卡片与归档中。</span><br><span class="line"></span><br><span class="line">&gt; 什么？你想完全不渲染不显示？那你为何不将其放在 `_drafts` 文件夹下，或干脆不提交这篇文章。</span><br><span class="line"></span><br><span class="line">```yaml</span><br><span class="line">---</span><br><span class="line">title: xxx</span><br><span class="line">hide: true</span><br><span class="line"># hide: index</span><br><span class="line">sitemap: false</span><br><span class="line">indexing: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure></code></pre></li></ul><h4 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h4><p>表格</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs First unique name %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="first-unique-name"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="first-unique-name-1">First unique name 1</button><button type="button" class="tab " data-href="first-unique-name-2">First unique name 2</button><button type="button" class="tab " data-href="first-unique-name-3">First unique name 3</button></ul><div class="tab-contents"><div class="tab-item-content active" id="first-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="first-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content" id="first-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h4 id="文章优先级设置"><a href="#文章优先级设置" class="headerlink" title="文章优先级设置"></a>文章优先级设置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">置顶</span><br><span class="line"></span><br><span class="line">    确保你的 hexo-generator-index</span><br><span class="line"></span><br><span class="line">    (opens new window) 为 2.0.0 或以上</span><br><span class="line"></span><br><span class="line">通过设置文章 Front Matter 中 sticky 属性以进行置顶，数值越高，优先级越高。</span><br><span class="line"></span><br><span class="line">设置置顶后，文章卡片右上角将出现置顶图标。</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: xxx</span><br><span class="line">sticky: 100</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">你也可以通过设置权重来实现多篇置顶文章的顺序。</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: xxx</span><br><span class="line">sticky: 1</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: xxx</span><br><span class="line">sticky: 2</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">此时 sticky: 2 的文章将排列在 sticky: 1 的文章上面。</span><br></pre></td></tr></table></figure><h2 id="打赏开关"><a href="#打赏开关" class="headerlink" title="打赏开关"></a>打赏开关</h2><p>您也可以在某篇文章的首部单独设置是否开启打赏。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">reward:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># reward: false</span></span><br></pre></td></tr></table></figure><h2 id="文章播放器开关"><a href="#文章播放器开关" class="headerlink" title="文章播放器开关"></a>文章播放器开关</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">aplayer:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h2><p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- Diary</span><br><span class="line">tags:</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br></pre></td></tr></table></figure><blockquote><p>分类方法的分歧</p><p>如果您有过使用 WordPress 的经验，就很容易误解 Hexo 的分类方式。WordPress 支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是 Hexo 不支持指定多个同级分类。下面的指定方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">  - Diary</span><br><span class="line">  - Life</span><br></pre></td></tr></table></figure><p>会使分类<code>Life</code>成为<code>Diary</code>的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</p><p>如果你需要为文章添加多个分类，可以尝试以下 list 中的方法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- [Diary, PlayStation]</span><br><span class="line">- [Diary, Games]</span><br><span class="line">- [Life]</span><br></pre></td></tr></table></figure><p>此时这篇文章同时包括三个分类： <code>PlayStation</code> 和 <code>Games</code> 分别都是父分类 <code>Diary</code> 的子分类，同时 <code>Life</code> 是一个没有子分类的分类。</p></blockquote><h1 id="编写文章Front-matter"><a href="#编写文章Front-matter" class="headerlink" title="编写文章Front-matter"></a>编写文章Front-matter</h1><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>layout</code></td><td>布局</td></tr><tr><td><code>title</code></td><td>标题</td></tr><tr><td><code>date</code></td><td>建立日期</td></tr><tr><td><code>updated</code></td><td>更新日期</td></tr><tr><td><code>comments</code></td><td>开启文章的评论功能</td></tr><tr><td><code>tags</code></td><td>标签（不适用于分页）</td></tr><tr><td><code>categories</code></td><td>分类（不适用于分页）</td></tr><tr><td><code>permalink</code></td><td>覆盖文章网址</td></tr></tbody></table><h2 id="生成新文章"><a href="#生成新文章" class="headerlink" title="生成新文章"></a>生成新文章</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;   <span class="comment">//layout默认是post    缩写hexo new paper</span></span><br></pre></td></tr></table></figure><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>，它们分别对应不同的路径，而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p><table><thead><tr><th>布局</th><th>路径</th></tr></thead><tbody><tr><td><code>post</code></td><td><code>source/_posts</code></td></tr><tr><td><code>page</code></td><td><code>source</code></td></tr><tr><td><code>draft</code></td><td><code>source/_drafts</code></td></tr></tbody></table><h2 id="page"><a href="#page" class="headerlink" title="page"></a>page</h2><p>如果你想另起一页，那么可以使用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page board</span><br></pre></td></tr></table></figure><p>系统会自动给你在source文件夹下创建一个board文件夹，以及board文件夹中的index.md，这样你访问的board对应的链接就是<a href="http://xxx.xxx/board">http://xxx.xxx/board</a></p><h2 id="draft"><a href="#draft" class="headerlink" title="draft"></a>draft</h2><p>draft是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以</p><pre><code>hexo new draft newpage</code></pre><p>这样会在source&#x2F;_draft中新建一个newpage.md文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用</p><pre><code>hexo server --draft1</code></pre><p>在本地端口中开启服务预览。</p><p>如果你的草稿文件写完了，想要发表到post中，</p><pre><code>hexo publish draft newpage</code></pre><p>就会自动把newpage.md发送到post中。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客文章编辑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino的学习</title>
      <link href="/posts/1022efac/"/>
      <url>/posts/1022efac/</url>
      
        <content type="html"><![CDATA[<p>最近粗糙的学习了Arduino的使用ヾ(≧▽≦*)o</p><span id="more"></span><h1 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h1><blockquote><p><a href="https://www.arduino.cc/en/software">https://www.arduino.cc/en/software</a></p></blockquote><p>下载完后在工具中选择对应的开发板型号和端口</p><h1 id="添加其他的开发板"><a href="#添加其他的开发板" class="headerlink" title="添加其他的开发板"></a>添加其他的开发板</h1><p>这里使用esp8266mini d1开发板</p><blockquote><p>在文件-首选项-附加开发板管理器网址里填写  <a href="http://arduino.esp8266.com/stable/package_esp8266com_index.json">http://arduino.esp8266.com/stable/package_esp8266com_index.json</a></p></blockquote><blockquote><p>之后在工具-开发板-开发板管理器搜索esp8266安装</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022251971.png"></p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022251744.png" alt="20210712210607"></p><h1 id="初始文件讲解"><a href="#初始文件讲解" class="headerlink" title="初始文件讲解"></a>初始文件讲解</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 这里面放的是刚开机会运行的东西,比如串口通信频率</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 这里放的函数将会一直循环,相当于while</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Arduino函数"><a href="#Arduino函数" class="headerlink" title="Arduino函数"></a>Arduino函数</h1><h2 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pinMode(LED_BUILTIN, OUTPUT)   <span class="comment">//定义输出引脚</span></span><br><span class="line">pinMode(LED_BUILTIN, INPUT)   <span class="comment">//定义输入引脚</span></span><br></pre></td></tr></table></figure><h2 id="引脚高低电平设定"><a href="#引脚高低电平设定" class="headerlink" title="引脚高低电平设定"></a>引脚高低电平设定</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">digitalWrite(LED_BUILTIN, LOW);  <span class="comment">//高低电平设置</span></span><br></pre></td></tr></table></figure><h2 id="引脚高低电平读取"><a href="#引脚高低电平读取" class="headerlink" title="引脚高低电平读取"></a>引脚高低电平读取</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">digtialRead(pushButton);   <span class="comment">//引脚电平读取</span></span><br></pre></td></tr></table></figure><h2 id="延时函数"><a href="#延时函数" class="headerlink" title="延时函数"></a>延时函数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delay(<span class="number">1000</span>);  <span class="comment">//延时1000ms</span></span><br></pre></td></tr></table></figure><h2 id="串口波特率设置"><a href="#串口波特率设置" class="headerlink" title="串口波特率设置"></a>串口波特率设置</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Serial.begin(<span class="number">9600</span>); <span class="comment">//波特率</span></span><br></pre></td></tr></table></figure><h2 id="串口信息输出"><a href="#串口信息输出" class="headerlink" title="串口信息输出"></a>串口信息输出</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Serial.<span class="built_in">printf</span>(<span class="string">&quot;&quot;</span>); <span class="comment">//输出字符串   没有格式化</span></span><br></pre></td></tr></table></figure><h2 id="PWM实现"><a href="#PWM实现" class="headerlink" title="PWM实现"></a>PWM实现</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sensorRead= analogRead(PIN);<span class="comment">// 数据信号转模拟信号</span></span><br><span class="line">newdata=<span class="built_in">map</span>(sensorRead,<span class="number">0</span>,<span class="number">1023</span>,<span class="number">0</span>,<span class="number">100</span>);<span class="comment">//数据映射  0~1023是sensorRead的值，0~100是映射的值     1023-&gt;100</span></span><br><span class="line">analogWrite(PIN,newdata);  <span class="comment">//PWM</span></span><br></pre></td></tr></table></figure><h2 id="引用同目录头文件"><a href="#引用同目录头文件" class="headerlink" title="引用同目录头文件"></a>引用同目录头文件</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;...&quot;</span>   <span class="comment">//相比与#include &lt;...&gt;  ，&lt;&gt;里面引用的头文件是Arduino根目录下的libraries里的头文件</span></span></span><br></pre></td></tr></table></figure><h1 id="伺服电机"><a href="#伺服电机" class="headerlink" title="伺服电机"></a>伺服电机</h1><blockquote><p>棕色线GND   橘色信号线    红色VCC</p></blockquote><blockquote><p>需要包含头文件  Servo.h</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Servo.h&gt;</span></span></span><br><span class="line">Servo myservo  <span class="comment">//定义电机的名字（结构体）</span></span><br><span class="line">myervo.attach(PIN); <span class="comment">//定义控制电机的引脚(信号线)</span></span><br><span class="line">myservo.write(<span class="number">90</span>);   <span class="comment">//电机转动90度</span></span><br></pre></td></tr></table></figure><h1 id="74HC595"><a href="#74HC595" class="headerlink" title="74HC595"></a>74HC595</h1><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>引脚扩展   3个引脚扩展成8个</p><h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022251316.png" alt="20210705230129"></p><h2 id="每个引脚功能"><a href="#每个引脚功能" class="headerlink" title="每个引脚功能"></a>每个引脚功能</h2><p>“资料”引脚DS： 编写引脚数据</p><p>“活塞”引脚SH：传输每个引脚的数据</p><p>“大平台”引脚ST：控制数据上传到每个引脚</p><h2 id="编码顺序"><a href="#编码顺序" class="headerlink" title="编码顺序"></a>编码顺序</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义3个“资料PIN1”“活塞PIN2”“大平台PIN3”引脚为输出</span></span><br><span class="line">pinMode(PIN1, OUTPUT)   <span class="comment">//定义输出引脚</span></span><br><span class="line">pinMode(PIN2, OUTPUT)   <span class="comment">//定义输出引脚</span></span><br><span class="line">pinMode(PIN3, OUTPUT)   <span class="comment">//定义输出引脚</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data[<span class="number">8</span>]=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line">digitalWrite(PIN3，LOW);   <span class="comment">//将“大平台”设置为低，准备接收数据</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">digitalWrite(PIN2,LOW);     <span class="comment">//收起“活塞” 设置为低，准备传输 数据</span></span><br><span class="line">digitalWrite(PIN1,data[i]);<span class="comment">//传入数据</span></span><br><span class="line">        digitalWrite(PIN2,HIGH);     <span class="comment">//推动“活塞” 设置为高，传输数据</span></span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">8</span>) digitalWrite(PIN3，HIGH);   <span class="comment">//将“大平台”设置为高，接收数据</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="步进电机"><a href="#步进电机" class="headerlink" title="步进电机"></a>步进电机</h1><blockquote><p>采用模块：ULN2003A       那边高电平，对称的位置的接地</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022251508.png" alt="20210705232736"></p><h2 id="步进电机内部结构"><a href="#步进电机内部结构" class="headerlink" title="步进电机内部结构"></a>步进电机内部结构</h2><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022251076.png" alt="20210705233302"></p><blockquote><p>启动方法：四根线循环接地</p></blockquote><h1 id="8-8LED"><a href="#8-8LED" class="headerlink" title="8*8LED"></a>8*8LED</h1><blockquote><p>点亮一个灯：L4高电平，C1低电平</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022251476.png" alt="20210705234420"></p><h1 id="红外模块"><a href="#红外模块" class="headerlink" title="红外模块"></a>红外模块</h1><blockquote><p><a href="https://github.com/Arduino-IRremote/Arduino-IRremote">https://github.com/Arduino-IRremote/Arduino-IRremote</a></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;IRremote.h&gt;</span><span class="comment">//包含头文件</span></span></span><br><span class="line">IRrecv <span class="title function_">irrecv</span><span class="params">(PIN)</span>;<span class="comment">//设置红外接收引脚</span></span><br><span class="line">decode_results results;<span class="comment">//接收红外信号值</span></span><br><span class="line">irrecv.enaleIRIn();<span class="comment">//开启红外接收</span></span><br><span class="line"><span class="keyword">if</span>(irrecv.decode(&amp;results))<span class="comment">//判断是否接收到红外信号</span></span><br><span class="line">&#123;</span><br><span class="line">    Serial.println(results.value,HEX);<span class="comment">//将接收数据results.value以16进制输出</span></span><br><span class="line">    irrecv.resume();<span class="comment">//继续接收</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ATtiny85"><a href="#ATtiny85" class="headerlink" title="ATtiny85"></a>ATtiny85</h1><h2 id="结构-1"><a href="#结构-1" class="headerlink" title="结构"></a>结构</h2><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022251694.png" alt="20210706153839"></p><blockquote><p>需要Arduino作为烧录器烧录</p><p>例程选择ArduinoISP,烧录到Arduino</p><p>工具里烧录器改成Arduino as ISP，开发板选择ATtiny85</p><p>接线：将Reset，Pin2，Pin1，Pin0接入Arduino</p></blockquote><blockquote><p><a href="https://raw.githubusercontent.com/damellis/attiny/ide-1.6.x-boards-manager/package_damellis_attiny_index.json">https://raw.githubusercontent.com/damellis/attiny/ide-1.6.x-boards-manager/package_damellis_attiny_index.json</a></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">analogWrite(PIN,value)；<span class="comment">//PWM控制灯亮度</span></span><br></pre></td></tr></table></figure><h1 id="ws2812b"><a href="#ws2812b" class="headerlink" title="ws2812b"></a>ws2812b</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Adafruit_NeoPixel.h&gt;</span></span></span><br><span class="line">Adafruit_NeoPixel <span class="title function_">strip</span><span class="params">(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800)</span>; <span class="comment">//定义灯的参数</span></span><br><span class="line">strip.begin();<span class="comment">//初始化</span></span><br><span class="line">strip.show();    <span class="comment">//每次setPixelColor设置完，都要执行这个程序</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置颜色方法1</span></span><br><span class="line">strip.setPixelColor(n, red, green, blue, white);<span class="comment">//n:位置，white:亮度0~255</span></span><br><span class="line">strip.show();</span><br><span class="line"><span class="comment">//设置颜色方法2</span></span><br><span class="line"><span class="type">uint32_t</span> magenta = strip.Color(red, green, blue);  <span class="comment">//RGB颜色转换</span></span><br><span class="line">strip.setPixelColor(n,magenta);</span><br><span class="line">strip.show();</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用getPixelColor()方法可以查询某像素的颜色。</span></span><br><span class="line"><span class="type">uint32_t</span> color = strip.getPixelColor(<span class="number">11</span>);<span class="comment">//该方法返回32位颜色值。</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> n = strip.numPixels();<span class="comment">//获取LED数量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置整体亮度,setBrightness()一般只在setup()中调用</span></span><br><span class="line">strip.setBrightness(<span class="number">64</span>);<span class="comment">//彩带中LED的整体亮度可以用setBrightness()进行调整，该方法只需一个参数，0为关闭，255为最大亮度。 例如，将彩带设置为1/4亮度：</span></span><br><span class="line">strip.show();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Arduino </tag>
            
            <tag> 制作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站的由来（制作）</title>
      <link href="/posts/31e5cf3f/"/>
      <url>/posts/31e5cf3f/</url>
      
        <content type="html"><![CDATA[<h1 id="网站制作准备"><a href="#网站制作准备" class="headerlink" title="网站制作准备"></a>网站制作准备</h1><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><blockquote><p>Git：<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p><p>nodejs：<a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a> <strong>下载稳定版STL就行</strong></p></blockquote><p>安装的时候记得把路径改一下，除非你是C盘战士。</p><p>打开<code>Git</code>用<code>cd</code>指令定位到你想放网站的位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> f:/Blog/myblog</span><br></pre></td></tr></table></figure><p>在框内输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="检查版本"><a href="#检查版本" class="headerlink" title="检查版本"></a>检查版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h2 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblog</span><br></pre></td></tr></table></figure><p>myblog是网站文件的名字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myblog</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-render-pug 不装有些主题无法使用</span><br><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>这样你的网站框架就搭好了,浏览器输入<code>localhost:4000</code>查看</p><p>关闭网站按<code>CTRL+C</code></p><hr><h1 id="网站托管"><a href="#网站托管" class="headerlink" title="网站托管"></a>网站托管</h1><blockquote><p>网站托管可以在Coding、Github、Gitee或者购买虚拟机</p><p>下面我将一一介绍(本文不介绍虚拟机)</p></blockquote><h2 id="Coding网站托管"><a href="#Coding网站托管" class="headerlink" title="Coding网站托管"></a>Coding网站托管</h2><blockquote><p>网址：<a href="https://coding.net/">https://coding.net/</a></p><p>优势：国内，访问速度快</p><p>劣势：免费使用6个月</p></blockquote><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022257630.png" alt="20210629193905"></p><h3 id="添加ssh公钥"><a href="#添加ssh公钥" class="headerlink" title="添加ssh公钥"></a>添加ssh公钥</h3><p><img src="/my-first-paper/20210629194130.png" alt="20210629194130"></p><h3 id="检查是否连接成功"><a href="#检查是否连接成功" class="headerlink" title="检查是否连接成功"></a>检查是否连接成功</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@e.coding.net</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022257619.png" alt="20210629194252"></p><h3 id="选择网站托管服务"><a href="#选择网站托管服务" class="headerlink" title="选择网站托管服务"></a>选择网站托管服务</h3><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022257055.png" alt="20210629194407"></p><blockquote><p>但此时项目中还没有文件，需要上传文件上去，上传方面可以直接跳到 <a href="#jump">网站文件上传</a></p></blockquote><hr><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><blockquote><p>进入<a href="https://github.com/">https://github.com/</a>  注册<code>Github</code>账号</p><p>优势：免费</p><p>劣势：因为是<code>国外</code>的网站，会有进入不了你自己的网站的可能，而且<code>加载</code>相比另外两种会<code>慢</code>些</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022257692.png" alt="20210629165424"></p><blockquote><p>库名按下面的图来，<code>你的名字.github.io</code></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022257118.png" alt="20210629165656"></p><h3 id="Git连接Github账户"><a href="#Git连接Github账户" class="headerlink" title="Git连接Github账户"></a>Git连接Github账户</h3><blockquote><p>输入命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name 你的名字<span class="string">&quot;</span></span><br><span class="line"><span class="string">git config --global user.email 你的邮箱</span></span><br></pre></td></tr></table></figure><p><strong>邮箱和名字是你Github的</strong></p><h3 id="获取ssh（后面有用）"><a href="#获取ssh（后面有用）" class="headerlink" title="获取ssh（后面有用）"></a>获取ssh（后面有用）</h3><blockquote><p>打开Git窗口后输入下面的命令，然后一直回车</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line">或者</span><br><span class="line">ssh-keygen -t rsa -f id_rsa.github -C <span class="string">&quot;注册GitHub的邮箱&quot;</span></span><br><span class="line">或者</span><br><span class="line">ssh-keygen -t rsa -f id_rsa.gitee -C <span class="string">&quot;注册Gitee的邮箱&quot;</span></span><br><span class="line">3个选一个就好,输入多了会被覆盖</span><br></pre></td></tr></table></figure><blockquote><p>打开资源管理器进入<code>C:\Users\你电脑的用户名\.ssh</code>，找到<code>id_rsa.pub</code>文件右键打开方式，然后选择记事本打开，复制里面的内容(这个要保密的哦)</p></blockquote><blockquote><p>进入<code>Github</code>账户设置</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022258520.png" alt="20210629170559"></p><blockquote><p>点击SSH and GPG kyes，粘贴刚刚复制的内容</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022258481.png" alt="20210629170806"></p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022258539.png" alt="20210629170959"></p><blockquote><p>打开Git 输入<strong>ssh -T <a href="mailto:&#x67;&#x69;&#116;&#64;&#103;&#x69;&#x74;&#x68;&#x75;&#98;&#x2e;&#99;&#111;&#109;">&#x67;&#x69;&#116;&#64;&#103;&#x69;&#x74;&#x68;&#x75;&#98;&#x2e;&#99;&#111;&#109;</a></strong>  ，出现下面的提示就是成功连接到GitHub</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022258146.png" alt="20210629171325"></p><blockquote><p>打开Github的Page服务</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022258288.png" alt="20210629192805"></p><p>出现波浪线那条就行,Github的网站托管就配置好了,网址就显示在画波浪线那了</p><hr><h2 id="Gitee网站托管暂时无法使用-以后能用了再补充"><a href="#Gitee网站托管暂时无法使用-以后能用了再补充" class="headerlink" title="Gitee网站托管暂时无法使用(以后能用了再补充)"></a>Gitee网站托管暂时无法使用(以后能用了再补充)</h2><blockquote><p>网址：<a href="https://gitee.com/">https://gitee.com/</a></p><p>优势：国内，访问速度快</p></blockquote><hr><h1 id="网站文件上传"><a href="#网站文件上传" class="headerlink" title="网站文件上传"></a><span id="jump">网站文件上传</span></h1><blockquote><p>首先要进入博客文件的<code>根目录</code>，打开<code>_config.yml</code>在末尾加上这一串代码，我把3种网站托管方式都写在下面了，注意首行缩进要对齐，照猫画虎的改一下吧</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://e.coding.net/joemax01/xiaoluostudy/xiaoluostudy.git</span></span><br><span class="line"><span class="comment">#  repo: https://github.com/joemax01/joemax01.github.io.git</span></span><br><span class="line"><span class="comment">#  repo: https://gitee.com/JoeMax/JoeMax.Gitee.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><blockquote><p>之后用Git进入博客的根目录(如何进入文章开头有说明)，按顺序输入</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><blockquote><p>过一会就可以用网站访问看效果了</p></blockquote><hr><h1 id="自定义自己的博客"><a href="#自定义自己的博客" class="headerlink" title="自定义自己的博客"></a>自定义自己的博客</h1><h2 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h2><blockquote><p>进入<a href="https://hexo.io/themes/">https://hexo.io/themes/</a>   寻找自己心仪的网站模板或者其他地方的hexo模板也行</p><p>将文件放到”博客根目录\themes”里</p><p>在根目录里的<code>_config.yml</code>的<code>theme</code>写上刚刚那个网站模板文件夹的名称</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022259631.png" alt="20210629204754"></p><blockquote><p>用hexo server在本地先看看效果吧</p><p>可以缩写成hexo s</p></blockquote><hr><h2 id="创作自己的CDN图标"><a href="#创作自己的CDN图标" class="headerlink" title="创作自己的CDN图标"></a>创作自己的CDN图标</h2><blockquote><p>首先进入 <a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a> 创建自己的图标库</p></blockquote><p>在资源管理-我的项目  新建项目并上传自己想要的图标</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022258809.png" alt="20210712225458"></p><p>点开Symbol复制<code>.js</code>的链接到主题配置文件里</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#图标</span></span><br><span class="line"><span class="attr">head:</span></span><br><span class="line">  <span class="attr">css:</span></span><br><span class="line">  <span class="attr">js:</span></span><br><span class="line">    <span class="attr">base:</span></span><br><span class="line">    <span class="attr">async:</span></span><br><span class="line">      <span class="attr">iconfont:</span> <span class="string">//at.alicdn.com/t/font_2641442_dg8b6ohd9el.js</span></span><br><span class="line">    <span class="attr">defer:</span></span><br></pre></td></tr></table></figure><p>之后在主题配置文件里就可以调用这个图标了</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">albums</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/albums/</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">icon-gallery-line</span></span><br></pre></td></tr></table></figure><h1 id="域名申请-让域名好看又好记"><a href="#域名申请-让域名好看又好记" class="headerlink" title="域名申请(让域名好看又好记)"></a>域名申请(让域名好看又好记)</h1><blockquote><p>这里演示的是腾讯云购买域名（因为coding被腾讯收购了，这样操作会快些）</p><p>搜索框输入”域名”，点击域名注册</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022258917.png" alt="20210629202852"></p><blockquote><p>输入你想要的域名购买就行了，top比较便宜可以考虑</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022258584.png" alt="20210629203008"></p><blockquote><p>这时候打开Coding项目的网站托管里,点击自定义域名，然后新建域名,输入之前买的域名</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022258491.png" alt="20210629203518"></p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022259876.png" alt="20210629203713"></p><blockquote><p>按上面显示的，进入<a href="https://console.cloud.tencent.com/cns">https://console.cloud.tencent.com/cns</a>  进行解析</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022258740.png" alt="20210629203255"></p><blockquote><p>添加记录，之后跳回Coding那个界面，点击<code>我已添加</code> 完成！</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212022258690.png" alt="20210629203915"></p><h1 id="某些可能遇到的问题"><a href="#某些可能遇到的问题" class="headerlink" title="某些可能遇到的问题"></a>某些可能遇到的问题</h1><h2 id="无法上传无法上传"><a href="#无法上传无法上传" class="headerlink" title="无法上传无法上传"></a>无法上传无法上传</h2><p>ERROR Deployer not found: git</p><blockquote><p>原因:没有安装deployer</p></blockquote><blockquote><p>解决:在Git下输入这个指令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><h2 id="无法上传本地图片"><a href="#无法上传本地图片" class="headerlink" title="无法上传本地图片"></a>无法上传本地图片</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image</span><br></pre></td></tr></table></figure><p>设置同名文件夹在文章那个文件夹里</p><p>比如我的文章文件名my-first-paper，那就在这文件夹里创建一个my-first-paper文件夹，里面放图片，引用如下面所示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![20210629203713](my-first-paper/20210629203713.png)</span><br><span class="line">一定要左斜杠</span><br></pre></td></tr></table></figure><p><font size=44><strong>持续更新~</strong></font></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 制作 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决按照别人教程将中文名修改为英文名后无法登录问题</title>
      <link href="/posts/43dae4d5/"/>
      <url>/posts/43dae4d5/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>因为用户是中文名导致了某些软件运行错误，发现好像是用户起中文名称引起的，然后我找了把中文名更改为英文名的教程，随后电脑就出现问题了，如下</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212072022434.png" alt="image-20221207202229333"></p><p>具体教程我是参照这个<a href="https://blog.csdn.net/JWsunshine/article/details/119885925">Windows10电脑用户中文名修改为英文名的详细教程【亲测有用】_白开水就盒饭的博客-CSDN博客_修改电脑用户名为英文</a></p><blockquote><p>早知道先看评论了，淦。评论区一片哀嚎</p></blockquote><h1 id="方案思路"><a href="#方案思路" class="headerlink" title="方案思路"></a>方案思路</h1><p>1.新建账户</p><p>2.移动旧帐户文件到新账户下</p><p>3.既可以完成之前想改成英文名的问题，又可以解决就账户无法登录问题</p><p>PS：建议先复制一份旧账户文件（C:\Users下的那个账户）到其他盘，如果，太大，那也可以不考虑复制一份</p><h1 id="解决办法（曲线救国）"><a href="#解决办法（曲线救国）" class="headerlink" title="解决办法（曲线救国）"></a>解决办法（曲线救国）</h1><blockquote><p>适用范围，C盘的User目录里还有你之前的那个用户，否则按我的弄完，你也只是得到一个新用户，但是原来users下的文件会不见。</p></blockquote><h2 id="1-以管理员方式打开cmd或者powershell"><a href="#1-以管理员方式打开cmd或者powershell" class="headerlink" title="1.以管理员方式打开cmd或者powershell"></a>1.以管理员方式打开cmd或者powershell</h2><p>用win+x，然后打开powershell会快些，打开输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user administrator /active:<span class="built_in">yes</span></span><br></pre></td></tr></table></figure><p>之后注销，你会发现一个新的用户，这个是管理员账户，登录它。</p><h2 id="2-添加新用户"><a href="#2-添加新用户" class="headerlink" title="2.添加新用户"></a>2.添加新用户</h2><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212072034292.png" alt="image-20221207203416253"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">control userpasswords2</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212072035046.png" alt="image-20221207203530013"></p><h2 id="3-设置为管理员"><a href="#3-设置为管理员" class="headerlink" title="3.设置为管理员"></a>3.设置为管理员</h2><p>win+R，输入control，查看方式设为大图标</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212072037670.png" alt="image-20221207203742598"></p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212072038104.png" alt="image-20221207203814069"></p><p>在这里选择你新建的账户</p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212072039303.png" alt="image-20221207203913265"></p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212072040947.png" alt="image-20221207204000909"></p><p><img src="https://cdn.jsdelivr.net/gh/JoeMax01/CDN@main/img/202212072040539.png" alt="image-20221207204030500"></p><h2 id="3-注销，登录新账户"><a href="#3-注销，登录新账户" class="headerlink" title="3.注销，登录新账户"></a>3.注销，登录新账户</h2><p>完成基础设置后，注销，切换回管理员账户</p><h2 id="4-移动文件"><a href="#4-移动文件" class="headerlink" title="4.移动文件"></a>4.移动文件</h2><p>进入C:\Users里，把之前用不了的账户里面的所有东西（或者你需要的东西）复制到新账户的里面</p><h2 id="5-收尾工作"><a href="#5-收尾工作" class="headerlink" title="5.收尾工作"></a>5.收尾工作</h2><p>我建议你先退出管理员账户，进入新的账户看看效果，确认没有缺失什么文件，就可以下一步了</p><ol><li><p>注销，进入管理员账户，还是win+R，输入control userpasswords2来进入用户账户界面</p></li><li><p>删掉那个有问题的账户，你也可以选择不删，看你自己，如果已经确认没有什么文件不见的话，就可以删掉了</p></li><li><p>注销，进入新账户，以管理员身份打开cmd或者powershell，输入以下命令来关闭管理员账户，这样开机的时候就不会有两个账户让你选择了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user administrator /active:no</span><br></pre></td></tr></table></figure></li></ol><p>还有什么问题，评论区讨论</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中文名改英文名 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
